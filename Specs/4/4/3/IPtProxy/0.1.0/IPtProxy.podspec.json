{
  "name": "IPtProxy",
  "version": "0.1.0",
  "summary": "Obfs4proxy and Snowflake Pluggable Transports for iOS",
  "description": "Both Obfs4proxy and Snowflake Pluggable Transports are written in Go, which\nis a little annoying to use on iOS.\nThis pod encapsulates all the machinations to make it work and provides an\neasy to install binary including a wrapper around both.\n\nProblems solved in particular are:\n\n- One cannot compile `main` packages with `gomobile`. Both PTs are patched\n  to avoid this.\n- Both PTs are gathered under one roof here, since you cannot have two\n  `gomobile` frameworks in your iOS code, since there are some common Go\n  runtime functions exported, which will create a name clash.\n- Environment variable changes during runtime will not be recognized by\n  `goptlib` when done from within Swift/Objective-C. Therefore, sensible\n  values are hardcoded in the Go wrapper.\n- The ports where the PTs will listen on are hardcoded, since communicating\n  the used ports back to the app would be quite some work (e.g. trying to\n  read it from STDOUT) for very little benefit.\n- Snowflake currently can only be configured via command line, not via the\n  PT spec's method of using SOCKS username and password arguments.\n  Therefore Snowflake is patched to accept arguments via its `Main` method.\n\nBoth PTs are contained at their latest `master` commit, as per 2020-09-10.",
  "homepage": "https://github.com/tladesignz/IPtProxy",
  "license": {
    "type": "MIT",
    "file": "LICENSE"
  },
  "authors": {
    "Benjamin Erhart": "berhart@netzarchitekten.com"
  },
  "source": {
    "git": "https://github.com/tladesignz/IPtProxy.git",
    "tag": "0.1.0"
  },
  "social_media_url": "https://twitter.com/tladesignz",
  "platforms": {
    "ios": "11.0"
  },
  "preserve_paths": [
    "build.sh",
    "*.patch",
    "IPtProxy.go/*"
  ],
  "prepare_command": "./build.sh",
  "script_phases": {
    "name": "Go build of IPtProxy.framework",
    "execution_position": "before_compile",
    "script": "sh \"$PODS_TARGET_SRCROOT/build.sh\""
  },
  "vendored_frameworks": "IPtProxy.framework"
}
