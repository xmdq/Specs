{
  "name": "InterfaceKit",
  "version": "5.4.0",
  "summary": "InterfaceKit helps you use interface of UIKit, AppKit and WatchKit in SwiftUI interface easily",
  "description": "This is supported by [Saidong Zhang](https://zsd.name)\n\nits intention is to help people use interface of UIKit, AppKit and WatchKit in SwiftUI interface easily.\n/// You create custom views by declaring types that conform to the ``View``\n/// protocol. Implement the required ``View/body-swift.property`` computed\n/// property to provide the content for your custom view. Then you can present your UIKit\n/// ViewController View by using `InterfaceView(MyView())` , as follows.\n```\n///\n///     struct MyView: View {\n///         var body: some View {\n///             InterfaceView(MyView())\n///         }\n///     }\n///\n```\n/// The ``View`` protocol provides a large set of modifiers, defined as protocol\n/// methods with default implementations, that you use to position and configure\n/// views in the layout of your app. Modifiers typically work by wrapping the\n/// view instance on which you call them in another view with the specified\n/// characteristics. For example, adding the ``View/opacity(_:)`` modifier to a\n/// interface view returns a new view with some amount of transparency:\n```\n///\n///     InterfaceView(MyView())\n///         .opacity(0.5) // Display partially transparent interface view.\n///\n```\n/// It is recommended to use `ZStack` with `InterfaceView` , as follows.\n```\n///\n///     ZStack {\n///         InterfaceView(MyView())\n///         MySwiftUIView()\n///     }\n///\n```",
  "homepage": "https://github.com/adong666666/InterfaceKit",
  "license": "MIT",
  "authors": {
    "Saidong Zhang": "3440217568@qq.com"
  },
  "source": {
    "git": "https://github.com/adong666666/InterfaceKit.git",
    "tag": "5.4.0"
  },
  "requires_arc": true,
  "platforms": {
    "ios": "13.0",
    "osx": "10.15",
    "watchos": "6.0",
    "tvos": "13.0"
  },
  "source_files": "Sources/InterfaceKit/*.swift",
  "exclude_files": "",
  "frameworks": "SwiftUI",
  "swift_versions": "5.4",
  "subspecs": [
    {
      "name": "UIKit",
      "source_files": "Sources/InterfaceKit/UIInterface.swift"
    },
    {
      "name": "AppKit",
      "source_files": "Sources/InterfaceKit/NSInterface.swift"
    },
    {
      "name": "WatchKit",
      "source_files": "Sources/InterfaceKit/WKInterface.swift"
    }
  ],
  "swift_version": "5.4"
}
