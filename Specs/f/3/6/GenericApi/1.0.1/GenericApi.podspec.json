{
  "name": "GenericApi",
  "version": "1.0.1",
  "summary": "GenericApi is a layer for requests to help decode data and map errors.",
  "description": "# GenericApi\n\n[![CI Status](https://img.shields.io/travis/dejacs/GenericApi.svg?style=flat)](https://travis-ci.org/dejacs/GenericApi)\n[![Version](https://img.shields.io/cocoapods/v/GenericApi.svg?style=flat)](https://cocoapods.org/pods/GenericApi)\n[![License](https://img.shields.io/cocoapods/l/GenericApi.svg?style=flat)](https://cocoapods.org/pods/GenericApi)\n[![Platform](https://img.shields.io/cocoapods/p/GenericApi.svg?style=flat)](https://cocoapods.org/pods/GenericApi)\n\nGenericApi is a layer for requests to help decode data and map errors.\n\n## Installation\n\n### Cocoapods\n\n[CocoaPods](https://cocoapods.org/) is a dependency manager for Cocoa projects. For usage and installation instructions, visit their website. To integrate GenericApi into your Xcode project using CocoaPods, specify it in your `Podfile`:\n\n```\npod 'GenericApi', '~> 1.0.1'\n```\n\n### Swift Package Manager\n\n[Swift Package Manager](https://swift.org/package-manager/) is a tool for automating the distribution of Swift code and is integrated into the swift compiler.\n\nOnce you have your Swift package set up, adding GenericApi as a dependency is as easy as adding it to the `dependencies` value of your `Package.swift`.\n```\ndependencies: [\n    .package(url: \"https://github.com/dejacs/GenericApi\", .upToNextMajor(from: \"1.0.1\"))\n]\n\n```\n\n## Supported\n\nIt's implementation was tested for:\n- URLSession\n- Alamofire Session\n\nTo add a support for other session type, make it conform with `SessionProtocol`.\n\n## Features\n\n- Fetch an object or a list with URL and decoding to a Decodable Object/Array\n- Fetch an object or a list with URLRequest and decoding to a Decodable Object/Array\n- Fetch a data with URL or URLRequest and decoding to a Decodable Object *\n- Decode data to a Decodable Object\n- Verify errors in request result\n\n* **It needs to specify the generic type within completion**\n\n### Plus:\n- Mapped status code response\n- Mapped API errors\n- Extension for DispatchQueue and URLSession (for testing)\n- Extension of JSONDecoder with keyDecodingStrategy on init\n\n## Example\n\nTo run the example project, clone the repo, and run `pod install` from the Example directory first.\n\n## License\n\nGenericApi is available under the MIT license. See the LICENSE file for more info.\n\n## Final Words\n\nThat's it!\n\nAlso, you can contact me here: https://twitter.com/Mockada\n\nHope you enjoy it :sparkles:",
  "homepage": "https://github.com/dejacs/GenericApi",
  "license": {
    "type": "MIT",
    "file": "LICENSE"
  },
  "authors": {
    "Jade Silveira": "jadecs8@gmail.com"
  },
  "source": {
    "git": "https://github.com/dejacs/GenericApi.git",
    "tag": "1.0.1"
  },
  "social_media_url": "https://twitter.com/Mockada",
  "platforms": {
    "ios": "10.0"
  },
  "source_files": "GenericApi/Classes/**/*",
  "swift_versions": "4.0",
  "swift_version": "4.0"
}
